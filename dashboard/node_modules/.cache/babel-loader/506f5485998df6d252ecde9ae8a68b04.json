{"ast":null,"code":"var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\r\n * Converts `value` to a string key if it's not a string or symbol.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @returns {string|symbol} Returns the key.\r\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","map":{"version":3,"names":["isSymbol","require","INFINITY","toKey","value","result","module","exports"],"sources":["C:/Users/Dazai/Documents/GitHub/DesarrolloAplicaciones/dashboard/node_modules/lodash/_toKey.js"],"sourcesContent":["var isSymbol = require('./isSymbol');\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0;\r\n\r\n/**\r\n * Converts `value` to a string key if it's not a string or symbol.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @returns {string|symbol} Returns the key.\r\n */\r\nfunction toKey(value) {\r\n  if (typeof value == 'string' || isSymbol(value)) {\r\n    return value;\r\n  }\r\n  var result = (value + '');\r\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\r\n}\r\n\r\nmodule.exports = toKey;\r\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;AAEA;;;AACA,IAAIC,QAAQ,GAAG,IAAI,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EACpB,IAAI,OAAOA,KAAP,IAAgB,QAAhB,IAA4BJ,QAAQ,CAACI,KAAD,CAAxC,EAAiD;IAC/C,OAAOA,KAAP;EACD;;EACD,IAAIC,MAAM,GAAID,KAAK,GAAG,EAAtB;EACA,OAAQC,MAAM,IAAI,GAAV,IAAkB,IAAID,KAAL,IAAe,CAACF,QAAlC,GAA8C,IAA9C,GAAqDG,MAA5D;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBJ,KAAjB"},"metadata":{},"sourceType":"script"}