{"ast":null,"code":"var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\r\n * Checks if `path` exists on `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path to check.\r\n * @param {Function} hasFunc The function to check properties.\r\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\r\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","map":{"version":3,"names":["castPath","require","isArguments","isArray","isIndex","isLength","toKey","hasPath","object","path","hasFunc","index","length","result","key","module","exports"],"sources":["C:/Users/Dazai/Documents/GitHub/DesarrolloAplicaciones/dashboard/node_modules/lodash/_hasPath.js"],"sourcesContent":["var castPath = require('./_castPath'),\r\n    isArguments = require('./isArguments'),\r\n    isArray = require('./isArray'),\r\n    isIndex = require('./_isIndex'),\r\n    isLength = require('./isLength'),\r\n    toKey = require('./_toKey');\r\n\r\n/**\r\n * Checks if `path` exists on `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path to check.\r\n * @param {Function} hasFunc The function to check properties.\r\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\r\n */\r\nfunction hasPath(object, path, hasFunc) {\r\n  path = castPath(path, object);\r\n\r\n  var index = -1,\r\n      length = path.length,\r\n      result = false;\r\n\r\n  while (++index < length) {\r\n    var key = toKey(path[index]);\r\n    if (!(result = object != null && hasFunc(object, key))) {\r\n      break;\r\n    }\r\n    object = object[key];\r\n  }\r\n  if (result || ++index != length) {\r\n    return result;\r\n  }\r\n  length = object == null ? 0 : object.length;\r\n  return !!length && isLength(length) && isIndex(key, length) &&\r\n    (isArray(object) || isArguments(object));\r\n}\r\n\r\nmodule.exports = hasPath;\r\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CADzB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAAC,WAAD,CAFrB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAAC,YAAD,CAHrB;AAAA,IAIII,QAAQ,GAAGJ,OAAO,CAAC,YAAD,CAJtB;AAAA,IAKIK,KAAK,GAAGL,OAAO,CAAC,UAAD,CALnB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;EACtCD,IAAI,GAAGT,QAAQ,CAACS,IAAD,EAAOD,MAAP,CAAf;EAEA,IAAIG,KAAK,GAAG,CAAC,CAAb;EAAA,IACIC,MAAM,GAAGH,IAAI,CAACG,MADlB;EAAA,IAEIC,MAAM,GAAG,KAFb;;EAIA,OAAO,EAAEF,KAAF,GAAUC,MAAjB,EAAyB;IACvB,IAAIE,GAAG,GAAGR,KAAK,CAACG,IAAI,CAACE,KAAD,CAAL,CAAf;;IACA,IAAI,EAAEE,MAAM,GAAGL,MAAM,IAAI,IAAV,IAAkBE,OAAO,CAACF,MAAD,EAASM,GAAT,CAApC,CAAJ,EAAwD;MACtD;IACD;;IACDN,MAAM,GAAGA,MAAM,CAACM,GAAD,CAAf;EACD;;EACD,IAAID,MAAM,IAAI,EAAEF,KAAF,IAAWC,MAAzB,EAAiC;IAC/B,OAAOC,MAAP;EACD;;EACDD,MAAM,GAAGJ,MAAM,IAAI,IAAV,GAAiB,CAAjB,GAAqBA,MAAM,CAACI,MAArC;EACA,OAAO,CAAC,CAACA,MAAF,IAAYP,QAAQ,CAACO,MAAD,CAApB,IAAgCR,OAAO,CAACU,GAAD,EAAMF,MAAN,CAAvC,KACJT,OAAO,CAACK,MAAD,CAAP,IAAmBN,WAAW,CAACM,MAAD,CAD1B,CAAP;AAED;;AAEDO,MAAM,CAACC,OAAP,GAAiBT,OAAjB"},"metadata":{},"sourceType":"script"}